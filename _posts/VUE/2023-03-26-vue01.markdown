---
lng_pair: 01. Vue.js 소개
author: Ms. Park's Workshop
title: 01. Vue.js 소개
category: VUE
tags: [vue]
date: 2023-03-26 16:26:00 +0900
published : true
---
<!-- 소제목 -->
<!-- outline-start -->
Vue.js란?
<!-- outline-end -->


<h2>Vue.js 란</h2><hr/>
MVVM 패턴의 뷰 모델(ViewModel) 레이어에 해당하는 화면(View)단 라이브러리
<img src="/assets/img/posts/vue/vue01.jpg" title="vue01.jpg" alt="vue01.jpg"/><br>

<h2>Vue와 기존 웹 개발 방식(HTML, JavaScript) 비교</h2><hr/>

```javascript
  <div id="app"></div>

  <script>
    // console.log(div);
    var div = document.querySelector('#app');
    var str = 'hello world';
    div.innerHTML = str;

    str = 'hello world!!!';
    div.innerHTML = str;
  </script>
```

```javascript
    <div id="app"></div>

    <script>
        var div = document.querySelector('#app');
        var viewModel = {};


        // 라이브러리화 했을 때
        // 즉시실행 함수는 -> (function(){})()
        (function(){
            function init() {
                Object.defineProperty(viewModel, 'str', {
                // 속성에 접근했을 떄의 동작을 정의
                get: function() {
                    console.log('접근');
                },
                // 속성에 값을 할당했을 때의 동작을 정의
                set: function(newValue) {
                    console.log('할당', newValue)
                    render(newValue)
                }
            })
        }

        function render(value) {
            div.innerHTML = value
        }

        init();
        })();
        
    </script>
```

<h3>Object.defineProperty 사용법</h3>

```java
    Object.defineProperty(대상 객체, 객체의 속성, {
    // 정의할 내용  
    })

    Object.defineProperty(viewModel, 'str', {
    // 속성에 접근했을 때의 동작을 정의
        get: function() {
            console.log('접근');
        },
    // 속성에 값을 할당했을 때의 동작을 정의
        set: function(newValue) {
            console.log('할당', newValue)
            div.innerHTML = newValue;
        }
    })
```